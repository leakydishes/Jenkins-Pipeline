pipeline {
    agent any
    environment {
        DIRECTORY_PATH = "/Users/teclaire/.jenkins/workspace/my_first_pipeline"
        TESTING_ENVIRONMENT = "test-env"
        STAGING_ENVIRONMENT = "staging-env"
        PRODUCTION_ENVIRONMENT = "my_first_pipeline"
        RECIPIENT_EMAIL = 'te.clairee@gmail.com' // Email address
    }
    stages {
        stage('Build') {
            steps {
                echo "Fetching the source code from the directory path: ${env.DIRECTORY_PATH}"
                echo "Compiling the code and generating artifacts"
            }
        }
        stage('Unit and Integration Tests') {
            steps {
                echo "Running unit tests"
                echo "Running integration tests"
            }
        }
        stage('Code Analysis') {
            steps {
                echo "Running Code analysis in progress"
                // Uncomment to run a failure email
                // script {
                //     echo "Performing code analysis using Static Analysis Utilities plugin"
                //     def analysisResults = scanForIssues tool: [$class: 'CheckStyle'], pattern: '**/checkstyle-result.xml'
                //     def totalIssues = analysisResults.getTotalSize()
                //     echo "Total code analysis issues found: ${totalIssues}"
                //     if (totalIssues > 0) {
                //         currentBuild.result = 'FAILURE'
                //         error("Code analysis found issues")
                //     }
                // }
            }
        }
        stage('Security Scan') {
            steps {
                echo "Scanning code for security"
            }
        }
        stage('Deploy to Staging') {
            steps {
                echo "Deploying application to environment: ${env.STAGING_ENVIRONMENT}"
            }
        }
        stage('Integration Tests on Staging') {
            steps {
                echo "Running integration tests on environment"
            }
        }
        stage('Deploy to Production') {
            steps {
                echo "Deploying application to production environment: ${env.PRODUCTION_ENVIRONMENT}"
            }
        }
    }
    post {
        always {
            script {
                emailext subject: "Pipeline ${currentBuild.result}: ${env.JOB_NAME}",
                        body: "Pipeline ${currentBuild.result}: ${env.BUILD_URL}",
                        to: env.RECIPIENT_EMAIL, // Use the recipient's email address
                        attachmentsPattern: '**/build.log'
            }
        }
    }
}
